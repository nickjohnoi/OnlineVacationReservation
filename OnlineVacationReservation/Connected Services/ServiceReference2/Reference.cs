//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OnlineVacationReservation.ServiceReference2 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.FlightsSoap")]
    public interface FlightsSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchFlight", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet searchFlight(string Departing_Country, string Departing_City, string Destination_Country, string Destination_City, System.DateTime Departure);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchFlight", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> searchFlightAsync(string Departing_Country, string Departing_City, string Destination_Country, string Destination_City, System.DateTime Departure);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface FlightsSoapChannel : OnlineVacationReservation.ServiceReference2.FlightsSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FlightsSoapClient : System.ServiceModel.ClientBase<OnlineVacationReservation.ServiceReference2.FlightsSoap>, OnlineVacationReservation.ServiceReference2.FlightsSoap {
        
        public FlightsSoapClient() {
        }
        
        public FlightsSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FlightsSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlightsSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlightsSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet searchFlight(string Departing_Country, string Departing_City, string Destination_Country, string Destination_City, System.DateTime Departure) {
            return base.Channel.searchFlight(Departing_Country, Departing_City, Destination_Country, Destination_City, Departure);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> searchFlightAsync(string Departing_Country, string Departing_City, string Destination_Country, string Destination_City, System.DateTime Departure) {
            return base.Channel.searchFlightAsync(Departing_Country, Departing_City, Destination_Country, Destination_City, Departure);
        }
    }
}
